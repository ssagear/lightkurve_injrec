## Injection and Recovery classes

###########################################################

Notes:

AGN, random walk signals? pulsations - astroseismic?

appaloosa: modeling, injection and recovery (?) of flares

###########################################################

lightkurve.injrec.Injection(object)

Methods
(for K2 data)

in all methods: set a default zero point to 1.0
merged lightcurves are defined as the composite signal-free data plus synthetic lightcurve.


1. supernova(K2flux, K2time,  model, amplitude=default, duration=default, shockbreakout=False)
  injects a supernova light curve into K2 light curve
  parameters:  0) K2 lc flux and time: array-like
               1) model type: string (set default)
               2) specify:
                  a) amplitude: float
                  b) duration (days): float
                  c) shock breakout?: bool
  **note: number of params depends on the model**
  returns: time, flux of merged light curve

2. planet(K2flux, K2time, period, Rp/Rs, T0, impact=0, eccentricity=0)
  injects a planetary transit into K2 light curve
  parameters:  0) K2 lc flux and time: array-like
               1) orbital period (days): float
               2) radius (Re) or Rp/Rs: float
               3) inclination or impact parameter: float
               4) eccentricity: float
               5) limb darkening coefficients? but you
                  already have a K2 light curve
               6) transit mid-time: float
  returns: time, flux of merged light curve

3. rotation(K2flux, K2time, amplitude, frequency, phase=0)
  injects a sinusoidal starspot rotation light curve
  parameters:  0) K2 lc flux and time: array-like
               1) amplitude (size of spot) (percent): float
               2) frequency (location of spot) (1/days): float
               3) phase (starting point)(set default): float
  returns: time, flux of merged light curve

4. flare(params, K2 lc)
  injects a stellar flare
  parameters:  0) K2 lc flux and time: array-like
               1) amplitude (percent): float
               2) drop off rate (? how to define this?) (percent/days): float
               3) duration (days): float
  returns: time, flux of merged light curve

5. plot_merged_lc(time, mergedflux)
  plots the merged light curve
  parameters: 1) time: array-like
              2) flux: array-like
  returns: matplotlib axis object



lightkurve.injrec.Fitting(object)
